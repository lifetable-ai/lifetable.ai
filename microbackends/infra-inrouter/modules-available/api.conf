##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
    listen 80 default_server;
    listen [::]:80 default_server;


    add_header Cache-Control "no-cache";
    add_header Pragma no-cache;
    add_header Access-Control-Allow-Origin "*";
    add_header Access-Control-Allow-Credentials "true";
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
    add_header Access-Control-Allow-Headers "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type";

    # SSL configuration
    #
    # listen 443 ssl default_server;
    # listen [::]:443 ssl default_server;
    #
    # Note: You should disable gzip for SSL traffic.
    # See: https://bugs.debian.org/773332
    #
    # Read up on ssl_ciphers to ensure a secure configuration.
    # See: https://bugs.debian.org/765782
    #
    # Self signed certs generated by the ssl-cert package
    # Don't use them in a production server!
    #
    # include snippets/snakeoil.conf;

    root /home/ningo/apps/root-config;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;

    server_name ningowood.com;

    location /root-login-static {
        alias /home/ningo/apps/root-login/;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location /app-home-static {
        alias /home/ningo/apps/app-home/;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location /app-game-static {
        alias /home/ningo/apps/app-game/;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location /app-film-static {
        alias /home/ningo/apps/app-film/;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location /app-osc-static {
        alias /home/ningo/apps/app-osc/;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location /app-football-static {
        alias /home/ningo/apps/app-football/;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location /parcel-navbar-static {
        alias /home/ningo/apps/parcel-navbar/;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location /parcel-navbar-second-static {
        alias /home/ningo/apps/parcel-navbar-second/;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location ^~ /api/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;

        proxy_pass http://127.0.0.1:4000/;
    }

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        root /home/ningo/apps/root-config/;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    # pass PHP scripts to FastCGI server
    #
    #location ~ \.php$ {
    #       include snippets/fastcgi-php.conf;
    #
    #       # With php-fpm (or other unix sockets):
    #       fastcgi_pass unix:/run/php/php7.4-fpm.sock;
    #       # With php-cgi (or other tcp sockets):
    #       fastcgi_pass 127.0.0.1:9000;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #       deny all;
    #}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}
